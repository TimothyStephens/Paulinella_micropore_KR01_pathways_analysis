nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..
    1 / 61 (thread    0)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 61   10 / 61   20 / 61   30 / 61   40 / 61   50 / 61
done.

Progressive alignment 1/2... 
STEP     1 / 60 (thread    0) fSTEP     2 / 60 (thread    2) fSTEP     3 / 60 (thread    1) fSTEP     5 / 60 (thread    4) fSTEP     6 / 60 (thread    5) fSTEP     8 / 60 (thread    6) fSTEP     9 / 60 (thread    1) fSTEP    10 / 60 (thread    2) fSTEP    12 / 60 (thread    4) fSTEP    13 / 60 (thread    0) fSTEP     4 / 60 (thread    3) fSTEP    11 / 60 (thread    6) dSTEP    18 / 60 (thread    3) fSTEP     7 / 60 (thread    7) fSTEP    16 / 60 (thread    1) dSTEP    19 / 60 (thread    0) dSTEP    20 / 60 (thread    3) dSTEP    21 / 60 (thread    2) fSTEP    14 / 60 (thread    5)STEP    22 / 60 (thread    7) f dSTEP    23 / 60 (thread    2) dSTEP    25 / 60 (thread    7) fSTEP    15 / 60 (thread    4) dSTEP    27 / 60 (thread    0) dSTEP    28 / 60 (thread    7) fSTEP    29 / 60 (thread    1) fSTEP    17 / 60 (thread    6) dSTEP    30 / 60 (thread    2) dSTEP    24 / 60 (thread    3) dSTEP    33 / 60 (thread    6) fSTEP    26 / 60 (thread    5) dSTEP    34 / 60 (thread    6) dSTEP    32 / 60 (thread    4) dSTEP    36 / 60 (thread    3) fSTEP    38 / 60 (thread    0) fSTEP    37 / 60 (thread    6) dSTEP    31 / 60 (thread    7) dSTEP    40 / 60 (thread    2) dSTEP    39 / 60 (thread    4) dSTEP    35 / 60 (thread    1) dSTEP    41 / 60 (thread    6) dSTEP    47 / 60 (thread    6) dSTEP    43 / 60 (thread    0) dSTEP    48 / 60 (thread    6) d hSTEP    49 / 60 (thread    0) d hSTEP    50 / 60 (thread    4) d hSTEP    42 / 60 (thread    5) dSTEP    52 / 60 (thread    0) d hSTEP    54 / 60 (thread    4) d h
Reallocating..done. *alloclen = 1778
STEP    44 / 60 (thread    3) dSTEP    58 / 60 (thread    3) fSTEP    45 / 60 (thread    7) dSTEP    46 / 60 (thread    2) dSTEP    51 / 60 (thread    6) d hSTEP    53 / 60 (thread    1) d hSTEP    55 / 60 (thread    0) d hSTEP    56 / 60 (thread    5) d hSTEP    57 / 60 (thread    4) d hSTEP    59 / 60 (thread    3) d hSTEP    60 / 60 (thread    7) d h
done.

Making a distance matrix from msa.. 
    0 / 61 (thread    0)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 61   10 / 61   20 / 61   30 / 61   40 / 61   50 / 61
done.

Progressive alignment 2/2... 
STEP     1 / 60 (thread    0) fSTEP     2 / 60 (thread    1) fSTEP     3 / 60 (thread    2) fSTEP     5 / 60 (thread    4) fSTEP     8 / 60 (thread    6) fSTEP     9 / 60 (thread    4) fSTEP    11 / 60 (thread    0) fSTEP     4 / 60 (thread    3) fSTEP    12 / 60 (thread    1) fSTEP    14 / 60 (thread    6) fSTEP    15 / 60 (thread    0) fSTEP    16 / 60 (thread    1) fSTEP    13 / 60 (thread    2) dSTEP    18 / 60 (thread    6) fSTEP    19 / 60 (thread    0) dSTEP    17 / 60 (thread    1) dSTEP    21 / 60 (thread    6) dSTEP    22 / 60 (thread    0) fSTEP    23 / 60 (thread    1) dSTEP    24 / 60 (thread    6) dSTEP    25 / 60 (thread    0) fSTEP    27 / 60 (thread    6) dSTEP    28 / 60 (thread    1) dSTEP    26 / 60 (thread    0) dSTEP    29 / 60 (thread    6) dSTEP    30 / 60 (thread    1) dSTEP    31 / 60 (thread    6) dSTEP    32 / 60 (thread    0) dSTEP    33 / 60 (thread    6) dSTEP    35 / 60 (thread    6) dSTEP    34 / 60 (thread    1) dSTEP    36 / 60 (thread    0) dSTEP    37 / 60 (thread    0) dSTEP    38 / 60 (thread    6) dSTEP    40 / 60 (thread    1) dSTEP    39 / 60 (thread    0) dSTEP    41 / 60 (thread    6) dSTEP    42 / 60 (thread    0) dSTEP    44 / 60 (thread    6) fSTEP    43 / 60 (thread    1) dSTEP    45 / 60 (thread    6) dSTEP    46 / 60 (thread    1) dSTEP     6 / 60 (thread    5) fSTEP    50 / 60 (thread    1) dSTEP    48 / 60 (thread    6) dSTEP    51 / 60 (thread    1) f
Reallocating..done. *alloclen = 1775
STEP    49 / 60 (thread    3) d hSTEP    52 / 60 (thread    1) d hSTEP    53 / 60 (thread    6) d hSTEP     7 / 60 (thread    7) fSTEP    10 / 60 (thread    4) dSTEP    20 / 60 (thread    2) dSTEP    47 / 60 (thread    0) dSTEP    54 / 60 (thread    3) dSTEP    55 / 60 (thread    1) d hSTEP    56 / 60 (thread    6) d hSTEP    57 / 60 (thread    5) d hSTEP    58 / 60 (thread    7) d hSTEP    59 / 60 (thread    4) d hSTEP    60 / 60 (thread    2) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


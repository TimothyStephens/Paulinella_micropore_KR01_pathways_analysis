nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..
    1 / 96 (thread    0)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 96   10 / 96   20 / 96   30 / 96   40 / 96   50 / 96   60 / 96   70 / 96   80 / 96   90 / 96
done.

Progressive alignment 1/2... 
STEP     1 / 95 (thread    0) fSTEP     2 / 95 (thread    1) fSTEP     4 / 95 (thread    2) fSTEP     6 / 95 (thread    6) fSTEP     7 / 95 (thread    7) fSTEP     8 / 95 (thread    5) fSTEP     9 / 95 (thread    6) fSTEP    11 / 95 (thread    0) fSTEP     5 / 95 (thread    4) fSTEP    12 / 95 (thread    5) fSTEP     3 / 95 (thread    3) fSTEP    16 / 95 (thread    5) fSTEP    17 / 95 (thread    7) fSTEP    13 / 95 (thread    1) fSTEP    20 / 95 (thread    4) fSTEP    10 / 95 (thread    2) fSTEP    21 / 95 (thread    3) fSTEP    15 / 95 (thread    0) fSTEP    23 / 95 (thread    3) fSTEP    25 / 95 (thread    3) fSTEP    26 / 95 (thread    2) fSTEP    27 / 95 (thread    1) fSTEP    14 / 95 (thread    6) fSTEP    28 / 95 (thread    2) fSTEP    29 / 95 (thread    1) fSTEP    30 / 95 (thread    3) fSTEP    31 / 95 (thread    1) fSTEP    33 / 95 (thread    3) fSTEP    34 / 95 (thread    1) fSTEP    18 / 95 (thread    5) dSTEP    37 / 95 (thread    1) fSTEP    38 / 95 (thread    1) fSTEP    19 / 95 (thread    7) dSTEP    40 / 95 (thread    1) fSTEP    42 / 95 (thread    7) fSTEP    22 / 95 (thread    0) dSTEP    43 / 95 (thread    7) fSTEP    44 / 95 (thread    7) fSTEP    24 / 95 (thread    4) dSTEP    47 / 95 (thread    4) fSTEP    32 / 95 (thread    2) dSTEP    49 / 95 (thread    2) fSTEP    35 / 95 (thread    3) dSTEP    36 / 95 (thread    6) d
Reallocating..done. *alloclen = 2965
STEP    39 / 95 (thread    5) dSTEP    53 / 95 (thread    5) fSTEP    41 / 95 (thread    1) d hSTEP    54 / 95 (thread    5) fSTEP    55 / 95 (thread    5) fSTEP    45 / 95 (thread    7) d hSTEP    58 / 95 (thread    7) fSTEP    46 / 95 (thread    0) d hSTEP    59 / 95 (thread    7) fSTEP    60 / 95 (thread    7) dSTEP    62 / 95 (thread    0) dSTEP    48 / 95 (thread    4) d hSTEP    63 / 95 (thread    0) fSTEP    65 / 95 (thread    4) fSTEP    50 / 95 (thread    2) d hSTEP    67 / 95 (thread    2) fSTEP    51 / 95 (thread    3) d hSTEP    68 / 95 (thread    2) dSTEP    69 / 95 (thread    2) dSTEP    70 / 95 (thread    3) fSTEP    52 / 95 (thread    6) d hSTEP    71 / 95 (thread    2) fSTEP    72 / 95 (thread    3) fSTEP    75 / 95 (thread    6) dSTEP    56 / 95 (thread    5) d hSTEP    76 / 95 (thread    6) fSTEP    77 / 95 (thread    6) dSTEP    78 / 95 (thread    5) fSTEP    57 / 95 (thread    1) d hSTEP    80 / 95 (thread    5) fSTEP    82 / 95 (thread    1) dSTEP    61 / 95 (thread    7) d hSTEP    83 / 95 (thread    1) dSTEP    84 / 95 (thread    1) dSTEP    85 / 95 (thread    7) dSTEP    64 / 95 (thread    0) d hSTEP    88 / 95 (thread    0) dSTEP    66 / 95 (thread    4) d hSTEP    73 / 95 (thread    2) d hSTEP    74 / 95 (thread    3) d hSTEP    79 / 95 (thread    6) d hSTEP    81 / 95 (thread    5) d hSTEP    86 / 95 (thread    7) d hSTEP    87 / 95 (thread    1) d hSTEP    89 / 95 (thread    0) d hSTEP    90 / 95 (thread    4) d hSTEP    91 / 95 (thread    2) d hSTEP    92 / 95 (thread    3) d hSTEP    93 / 95 (thread    6) d hSTEP    94 / 95 (thread    5) d hSTEP    95 / 95 (thread    7) d h
done.

Making a distance matrix from msa.. 
    0 / 96 (thread    0)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 96   10 / 96   20 / 96   30 / 96   40 / 96   50 / 96   60 / 96   70 / 96   80 / 96   90 / 96
done.

Progressive alignment 2/2... 
STEP     1 / 95 (thread    0) fSTEP     2 / 95 (thread    1) fSTEP     3 / 95 (thread    2) fSTEP     6 / 95 (thread    5) fSTEP     8 / 95 (thread    7) fSTEP     4 / 95 (thread    3) fSTEP    11 / 95 (thread    0) fSTEP     5 / 95 (thread    4) fSTEP    12 / 95 (thread    5) fSTEP    13 / 95 (thread    7) fSTEP     7 / 95 (thread    6) fSTEP    14 / 95 (thread    0) fSTEP    15 / 95 (thread    7) fSTEP    16 / 95 (thread    5) fSTEP    18 / 95 (thread    5) fSTEP    17 / 95 (thread    7) fSTEP    10 / 95 (thread    2) fSTEP     9 / 95 (thread    1) fSTEP    19 / 95 (thread    5) dSTEP    20 / 95 (thread    0) fSTEP    25 / 95 (thread    1) fSTEP    26 / 95 (thread    0) fSTEP    28 / 95 (thread    1) fSTEP    30 / 95 (thread    1) fSTEP    31 / 95 (thread    1) fSTEP    33 / 95 (thread    5) fSTEP    21 / 95 (thread    3) dSTEP    22 / 95 (thread    4) dSTEP    36 / 95 (thread    4) fSTEP    23 / 95 (thread    7) dSTEP    38 / 95 (thread    7) fSTEP    24 / 95 (thread    6) dSTEP    40 / 95 (thread    6) fSTEP    27 / 95 (thread    2) dSTEP    42 / 95 (thread    2) fSTEP    29 / 95 (thread    0) dSTEP    43 / 95 (thread    2) fSTEP    44 / 95 (thread    2) fSTEP    46 / 95 (thread    0) fSTEP    32 / 95 (thread    1) dSTEP    47 / 95 (thread    0) fSTEP    49 / 95 (thread    1) fSTEP    34 / 95 (thread    5) dSTEP    35 / 95 (thread    3) dSTEP    37 / 95 (thread    4) dSTEP    52 / 95 (thread    3) fSTEP    53 / 95 (thread    3) dSTEP    54 / 95 (thread    3) fSTEP    55 / 95 (thread    3) fSTEP    39 / 95 (thread    7) dSTEP    58 / 95 (thread    7) fSTEP    41 / 95 (thread    6) dSTEP    59 / 95 (thread    7) fSTEP    61 / 95 (thread    6) dSTEP    45 / 95 (thread    2) d hSTEP    62 / 95 (thread    6) dSTEP    48 / 95 (thread    0) d hSTEP    65 / 95 (thread    0) fSTEP    50 / 95 (thread    1) d hSTEP    66 / 95 (thread    0) fSTEP    68 / 95 (thread    1) fSTEP    51 / 95 (thread    5) d hSTEP    69 / 95 (thread    1) fSTEP    70 / 95 (thread    1) fSTEP    56 / 95 (thread    3) d hSTEP    72 / 95 (thread    1) dSTEP    57 / 95 (thread    4) d hSTEP    60 / 95 (thread    7) d hSTEP    76 / 95 (thread    7) fSTEP    63 / 95 (thread    6) d hSTEP    77 / 95 (thread    7) fSTEP    78 / 95 (thread    7) fSTEP    80 / 95 (thread    6) dSTEP    64 / 95 (thread    2) d hSTEP    82 / 95 (thread    2) dSTEP    67 / 95 (thread    0) d hSTEP    83 / 95 (thread    2) dSTEP    85 / 95 (thread    0) dSTEP    71 / 95 (thread    5) d hSTEP    73 / 95 (thread    1) d hSTEP    87 / 95 (thread    0) dSTEP    86 / 95 (thread    5) dSTEP    74 / 95 (thread    3) d hSTEP    91 / 95 (thread    3) d h
Reallocating..done. *alloclen = 3051
STEP    75 / 95 (thread    4) d hSTEP    92 / 95 (thread    3) d hSTEP    79 / 95 (thread    7) d hSTEP    81 / 95 (thread    6) d hSTEP    84 / 95 (thread    2) d hSTEP    88 / 95 (thread    0) d hSTEP    89 / 95 (thread    1) d hSTEP    90 / 95 (thread    5) d hSTEP    93 / 95 (thread    4) d hSTEP    94 / 95 (thread    3) d hSTEP    95 / 95 (thread    7) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..

There are 2 ambiguous characters.
    1 / 114 (thread    0)  101 / 114 (thread    3)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 114   10 / 114   20 / 114   30 / 114   40 / 114   50 / 114   60 / 114   70 / 114   80 / 114   90 / 114  100 / 114  110 / 114
done.

Progressive alignment 1/2... 
STEP     1 / 113 (thread    0) fSTEP     3 / 113 (thread    2)STEP     4 / 113 (thread    1) fSTEP     2 / 113 (thread    3) f fSTEP     6 / 113 (thread    4) fSTEP     9 / 113 (thread    0) fSTEP     5 / 113 (thread    5) fSTEP    12 / 113 (thread    4) fSTEP     8 / 113 (thread    7) fSTEP    13 / 113 (thread    1) fSTEP     7 / 113 (thread    6) fSTEP    15 / 113 (thread    1) fSTEP    16 / 113 (thread    4) fSTEP    17 / 113 (thread    7) fSTEP    10 / 113 (thread    0) fSTEP    18 / 113 (thread    1) fSTEP    11 / 113 (thread    2) fSTEP    19 / 113 (thread    5) fSTEP    21 / 113 (thread    6) fSTEP    20 / 113 (thread    4) fSTEP    22 / 113 (thread    7) fSTEP    24 / 113 (thread    2) fSTEP    14 / 113 (thread    3) fSTEP    25 / 113 (thread    0) fSTEP    23 / 113 (thread    1) fSTEP    27 / 113 (thread    0) fSTEP    28 / 113 (thread    3) fSTEP    29 / 113 (thread    4) fSTEP    26 / 113 (thread    5) fSTEP    31 / 113 (thread    2) fSTEP    32 / 113 (thread    4) dSTEP    33 / 113 (thread    6) fSTEP    35 / 113 (thread    3) fSTEP    36 / 113 (thread    2) fSTEP    37 / 113 (thread    6) dSTEP    34 / 113 (thread    4)STEP    38 / 113 (thread    5) f fSTEP    30 / 113 (thread    7) dSTEP    39 / 113 (thread    0) dSTEP    41 / 113 (thread    5) fSTEP    42 / 113 (thread    4) fSTEP    43 / 113 (thread    2) fSTEP    40 / 113 (thread    3) dSTEP    47 / 113 (thread    4) dSTEP    48 / 113 (thread    1) dSTEP    45 / 113 (thread    0) dSTEP    50 / 113 (thread    6) fSTEP    44 / 113 (thread    5) dSTEP    52 / 113 (thread    6) dSTEP    46 / 113 (thread    7) dSTEP    55 / 113 (thread    1) fSTEP    56 / 113 (thread    1) dSTEP    57 / 113 (thread    6) dSTEP    58 / 113 (thread    5) dSTEP    51 / 113 (thread    4) dSTEP    49 / 113 (thread    2) dSTEP    60 / 113 (thread    7) dSTEP    59 / 113 (thread    1) dSTEP    53 / 113 (thread    3) dSTEP    65 / 113 (thread    1) dSTEP    66 / 113 (thread    4) dSTEP    54 / 113 (thread    0) dSTEP    67 / 113 (thread    3) dSTEP    61 / 113 (thread    6) dSTEP    68 / 113 (thread    4) dSTEP    63 / 113 (thread    2) dSTEP    71 / 113 (thread    3) fSTEP    70 / 113 (thread    1) dSTEP    73 / 113 (thread    2) fSTEP    74 / 113 (thread    3) dSTEP    75 / 113 (thread    2) dSTEP    76 / 113 (thread    3) d hSTEP    78 / 113 (thread    0) dSTEP    62 / 113 (thread    5) dSTEP    77 / 113 (thread    1) dSTEP    81 / 113 (thread    1) d hSTEP    84 / 113 (thread    5) d hSTEP    64 / 113 (thread    7) dSTEP    85 / 113 (thread    5) dSTEP    86 / 113 (thread    5) d hSTEP    88 / 113 (thread    7) d hSTEP    69 / 113 (thread    6) dSTEP    89 / 113 (thread    7) dSTEP    91 / 113 (thread    6) d hSTEP    72 / 113 (thread    4) d hSTEP    79 / 113 (thread    2) d hSTEP    80 / 113 (thread    3) d hSTEP    82 / 113 (thread    1) d hSTEP    83 / 113 (thread    0) d hSTEP    96 / 113 (thread    1) d hSTEP    87 / 113 (thread    5) d hSTEP    99 / 113 (thread    5) d hSTEP    90 / 113 (thread    7) d hSTEP   101 / 113 (thread    7) d h
Reallocating..done. *alloclen = 3372
STEP    92 / 113 (thread    6) d hSTEP    93 / 113 (thread    4) d hSTEP    94 / 113 (thread    2) d hSTEP    95 / 113 (thread    3) d hSTEP    97 / 113 (thread    1) d hSTEP    98 / 113 (thread    0) dSTEP   107 / 113 (thread    1) f hSTEP   100 / 113 (thread    5) d hSTEP   102 / 113 (thread    7) d hSTEP   103 / 113 (thread    6) d hSTEP   104 / 113 (thread    4) d hSTEP   105 / 113 (thread    2) d hSTEP   106 / 113 (thread    3) d hSTEP   108 / 113 (thread    1) d hSTEP   109 / 113 (thread    0) d hSTEP   110 / 113 (thread    5) d hSTEP   111 / 113 (thread    7) d hSTEP   112 / 113 (thread    6) d hSTEP   113 / 113 (thread    4) d h
done.

Making a distance matrix from msa.. 
    0 / 114 (thread    0)  100 / 114 (thread    0)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 114   10 / 114   20 / 114   30 / 114   40 / 114   50 / 114   60 / 114   70 / 114   80 / 114   90 / 114  100 / 114  110 / 114
done.

Progressive alignment 2/2... 
STEP     1 / 113 (thread    0)STEP     2 / 113 (thread    1) fSTEP     4 / 113 (thread    3) fSTEP     3 / 113 (thread    2)STEP     6 / 113 (thread    5) f f fSTEP     7 / 113 (thread    6) fSTEP     5 / 113 (thread    4) fSTEP    11 / 113 (thread    2) fSTEP     8 / 113 (thread    7) fSTEP    12 / 113 (thread    1) fSTEP    13 / 113 (thread    0) fSTEP    15 / 113 (thread    0) fSTEP    10 / 113 (thread    3) fSTEP    16 / 113 (thread    5) fSTEP    17 / 113 (thread    1) fSTEP    18 / 113 (thread    0) fSTEP    19 / 113 (thread    0) fSTEP    20 / 113 (thread    3) fSTEP    23 / 113 (thread    0) fSTEP    24 / 113 (thread    0) fSTEP    25 / 113 (thread    0) fSTEP    27 / 113 (thread    3) fSTEP    21 / 113 (thread    1) fSTEP    26 / 113 (thread    0) fSTEP    29 / 113 (thread    0) fSTEP    28 / 113 (thread    7) dSTEP    30 / 113 (thread    3) fSTEP    31 / 113 (thread    0) fSTEP    32 / 113 (thread    7) dSTEP    33 / 113 (thread    3) fSTEP    34 / 113 (thread    0) dSTEP    35 / 113 (thread    3) fSTEP     9 / 113 (thread    6) fSTEP    36 / 113 (thread    4) dSTEP    37 / 113 (thread    7) dSTEP    38 / 113 (thread    0) fSTEP    39 / 113 (thread    1) fSTEP    40 / 113 (thread    3) dSTEP    41 / 113 (thread    0) fSTEP    42 / 113 (thread    1) fSTEP    43 / 113 (thread    7) dSTEP    14 / 113 (thread    2) fSTEP    45 / 113 (thread    0) fSTEP    46 / 113 (thread    2) fSTEP    22 / 113 (thread    5) fSTEP    44 / 113 (thread    6) dSTEP    48 / 113 (thread    4) dSTEP    47 / 113 (thread    7) dSTEP    52 / 113 (thread    4) dSTEP    54 / 113 (thread    5) dSTEP    49 / 113 (thread    1) fSTEP    53 / 113 (thread    7) dSTEP    57 / 113 (thread    2) dSTEP    50 / 113 (thread    0) dSTEP    59 / 113 (thread    7) fSTEP    56 / 113 (thread    1) dSTEP    61 / 113 (thread    7) dSTEP    51 / 113 (thread    3) dSTEP    63 / 113 (thread    2) dSTEP    64 / 113 (thread    7) fSTEP    60 / 113 (thread    5) dSTEP    65 / 113 (thread    1) fSTEP    55 / 113 (thread    4) dSTEP    66 / 113 (thread    3) dSTEP    58 / 113 (thread    6) d hSTEP    71 / 113 (thread    3) dSTEP    67 / 113 (thread    7) dSTEP    62 / 113 (thread    0) d hSTEP    68 / 113 (thread    2) dSTEP    70 / 113 (thread    4) d hSTEP    72 / 113 (thread    1) d hSTEP    69 / 113 (thread    5) d hSTEP    74 / 113 (thread    3) d hSTEP    75 / 113 (thread    7) d hSTEP    73 / 113 (thread    6) d hSTEP    78 / 113 (thread    2) d hSTEP    80 / 113 (thread    3) d hSTEP    83 / 113 (thread    2) dSTEP    76 / 113 (thread    0) d hSTEP    84 / 113 (thread    6) fSTEP    88 / 113 (thread    0) dSTEP    77 / 113 (thread    4) d hSTEP    89 / 113 (thread    0) dSTEP    91 / 113 (thread    4) dSTEP    79 / 113 (thread    1) d hSTEP    81 / 113 (thread    5) d hSTEP    82 / 113 (thread    7) d hSTEP    85 / 113 (thread    2) d hSTEP    95 / 113 (thread    7) dSTEP    96 / 113 (thread    7) fSTEP    86 / 113 (thread    6) d hSTEP    99 / 113 (thread    6) dSTEP    87 / 113 (thread    3) d hSTEP   100 / 113 (thread    6) d hSTEP    90 / 113 (thread    0) d hSTEP    92 / 113 (thread    4) d hSTEP    93 / 113 (thread    1) d hSTEP    94 / 113 (thread    5) d hSTEP   106 / 113 (thread    5) fSTEP    97 / 113 (thread    7) d h
Reallocating..done. *alloclen = 3372
STEP    98 / 113 (thread    2) d hSTEP   101 / 113 (thread    6) d hSTEP   102 / 113 (thread    3) d hSTEP   103 / 113 (thread    0) d hSTEP   104 / 113 (thread    4) d hSTEP   105 / 113 (thread    1) d hSTEP   107 / 113 (thread    5) d hSTEP   108 / 113 (thread    7) d hSTEP   109 / 113 (thread    2) d hSTEP   110 / 113 (thread    6) d hSTEP   111 / 113 (thread    3) d hSTEP   112 / 113 (thread    0) d hSTEP   113 / 113 (thread    4) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


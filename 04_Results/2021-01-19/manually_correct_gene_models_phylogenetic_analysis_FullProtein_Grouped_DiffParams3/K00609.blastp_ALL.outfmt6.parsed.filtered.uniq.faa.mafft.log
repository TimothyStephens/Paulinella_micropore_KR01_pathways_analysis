nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..
    1 / 106 (thread    0)  101 / 106 (thread    7)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 106   10 / 106   20 / 106   30 / 106   40 / 106   50 / 106   60 / 106   70 / 106   80 / 106   90 / 106  100 / 106
done.

Progressive alignment 1/2... 
STEP     1 / 105 (thread    0) fSTEP     2 / 105 (thread    1) fSTEP     3 / 105 (thread    3) fSTEP     4 / 105 (thread    5) fSTEP     5 / 105 (thread    2) fSTEP     6 / 105 (thread    4) fSTEP     7 / 105 (thread    7) fSTEP     8 / 105 (thread    6) fSTEP     9 / 105 (thread    2) fSTEP    11 / 105 (thread    0) fSTEP    12 / 105 (thread    6) fSTEP    14 / 105 (thread    1) fSTEP    15 / 105 (thread    0) fSTEP    16 / 105 (thread    4) fSTEP    17 / 105 (thread    2) fSTEP    13 / 105 (thread    6) fSTEP    18 / 105 (thread    3) fSTEP    20 / 105 (thread    7)STEP    21 / 105 (thread    1) f fSTEP    10 / 105 (thread    5) fSTEP    22 / 105 (thread    7) fSTEP    24 / 105 (thread    7) fSTEP    25 / 105 (thread    7) fSTEP    19 / 105 (thread    3) fSTEP    26 / 105 (thread    2) fSTEP    29 / 105 (thread    6) fSTEP    23 / 105 (thread    1) fSTEP    32 / 105 (thread    3) fSTEP    27 / 105 (thread    0) fSTEP    34 / 105 (thread    7) fSTEP    36 / 105 (thread    0) fSTEP    28 / 105 (thread    2) fSTEP    31 / 105 (thread    6) fSTEP    38 / 105 (thread    1) fSTEP    40 / 105 (thread    0) fSTEP    42 / 105 (thread    2) fSTEP    30 / 105 (thread    5) fSTEP    44 / 105 (thread    6) fSTEP    33 / 105 (thread    3) fSTEP    45 / 105 (thread    6) fSTEP    46 / 105 (thread    5) fSTEP    35 / 105 (thread    7) fSTEP    47 / 105 (thread    5) fSTEP    50 / 105 (thread    3) dSTEP    41 / 105 (thread    0) fSTEP    51 / 105 (thread    7) fSTEP    37 / 105 (thread    4) fSTEP    53 / 105 (thread    4) dSTEP    39 / 105 (thread    1) fSTEP    54 / 105 (thread    0) fSTEP    43 / 105 (thread    2) fSTEP    56 / 105 (thread    1) fSTEP    48 / 105 (thread    6) fSTEP    58 / 105 (thread    2) fSTEP    59 / 105 (thread    3) dSTEP    62 / 105 (thread    6) dSTEP    49 / 105 (thread    5) fSTEP    63 / 105 (thread    5) dSTEP    52 / 105 (thread    7) fSTEP    64 / 105 (thread    5) fSTEP    55 / 105 (thread    0) dSTEP    67 / 105 (thread    6) dSTEP    69 / 105 (thread    3) dSTEP    70 / 105 (thread    3) fSTEP    71 / 105 (thread    3) dSTEP    73 / 105 (thread    0) fSTEP    57 / 105 (thread    1) dSTEP    74 / 105 (thread    0) dSTEP    75 / 105 (thread    0) dSTEP    77 / 105 (thread    1) dSTEP    60 / 105 (thread    2) d h
Reallocating..done. *alloclen = 6271
STEP    61 / 105 (thread    4) d hSTEP    79 / 105 (thread    2) dSTEP    81 / 105 (thread    4) fSTEP    65 / 105 (thread    5) d hSTEP    83 / 105 (thread    5) fSTEP    66 / 105 (thread    7) d hSTEP    84 / 105 (thread    5) dSTEP    68 / 105 (thread    6) d hSTEP    72 / 105 (thread    3) d hSTEP    76 / 105 (thread    0) d h
Reallocating..done. *alloclen = 7363
STEP    78 / 105 (thread    1) d hSTEP    90 / 105 (thread    1) fSTEP    80 / 105 (thread    2) d hSTEP    92 / 105 (thread    2) fSTEP    82 / 105 (thread    4) d hSTEP    85 / 105 (thread    5) d hSTEP    86 / 105 (thread    7) d hSTEP    95 / 105 (thread    5) fSTEP    87 / 105 (thread    6) d hSTEP    88 / 105 (thread    3) d hSTEP    89 / 105 (thread    0) d hSTEP    91 / 105 (thread    1) d hSTEP    93 / 105 (thread    2) d hSTEP    94 / 105 (thread    4) d hSTEP    96 / 105 (thread    5) d hSTEP    97 / 105 (thread    7) d hSTEP    98 / 105 (thread    6) d hSTEP    99 / 105 (thread    3) d hSTEP   100 / 105 (thread    0) d hSTEP   101 / 105 (thread    1) d hSTEP   102 / 105 (thread    2) d hSTEP   103 / 105 (thread    4) d hSTEP   104 / 105 (thread    5) d hSTEP   105 / 105 (thread    7) d h
done.

Making a distance matrix from msa.. 
    0 / 106 (thread    0)  100 / 106 (thread    0)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 106   10 / 106   20 / 106   30 / 106   40 / 106   50 / 106   60 / 106   70 / 106   80 / 106   90 / 106  100 / 106
done.

Progressive alignment 2/2... 
STEP     1 / 105 (thread    0) fSTEP     2 / 105 (thread    1) fSTEP     3 / 105 (thread    3) fSTEP     4 / 105 (thread    2) fSTEP     5 / 105 (thread    4) fSTEP     6 / 105 (thread    5) fSTEP     7 / 105 (thread    6) fSTEP     9 / 105 (thread    2) fSTEP    10 / 105 (thread    2) fSTEP    11 / 105 (thread    2) fSTEP    12 / 105 (thread    0) fSTEP    13 / 105 (thread    2) fSTEP    14 / 105 (thread    4) fSTEP    15 / 105 (thread    6) fSTEP    16 / 105 (thread    6) fSTEP    17 / 105 (thread    3) fSTEP    19 / 105 (thread    6) fSTEP    20 / 105 (thread    6) fSTEP    21 / 105 (thread    6) fSTEP    22 / 105 (thread    1) fSTEP    23 / 105 (thread    6) fSTEP    24 / 105 (thread    6) fSTEP    25 / 105 (thread    6) fSTEP    26 / 105 (thread    4) fSTEP    18 / 105 (thread    2) fSTEP    29 / 105 (thread    3) fSTEP     8 / 105 (thread    7) fSTEP    33 / 105 (thread    2) fSTEP    27 / 105 (thread    4) fSTEP    35 / 105 (thread    4) fSTEP    28 / 105 (thread    0) fSTEP    38 / 105 (thread    0) fSTEP    30 / 105 (thread    3) fSTEP    32 / 105 (thread    1) fSTEP    40 / 105 (thread    0) fSTEP    31 / 105 (thread    5) fSTEP    34 / 105 (thread    2) fSTEP    43 / 105 (thread    1) fSTEP    45 / 105 (thread    5) dSTEP    36 / 105 (thread    4) fSTEP    46 / 105 (thread    5) dSTEP    47 / 105 (thread    2) fSTEP    37 / 105 (thread    6) fSTEP    48 / 105 (thread    2) fSTEP    50 / 105 (thread    2) dSTEP    51 / 105 (thread    2) dSTEP    52 / 105 (thread    2) dSTEP    53 / 105 (thread    4) fSTEP    39 / 105 (thread    7) fSTEP    54 / 105 (thread    2) dSTEP    55 / 105 (thread    4) fSTEP    57 / 105 (thread    4) dSTEP    58 / 105 (thread    4) dSTEP    59 / 105 (thread    4) dSTEP    61 / 105 (thread    6) fSTEP    42 / 105 (thread    0) fSTEP    41 / 105 (thread    3) fSTEP    62 / 105 (thread    7) dSTEP    63 / 105 (thread    7) dSTEP    44 / 105 (thread    1) fSTEP    65 / 105 (thread    0) fSTEP    67 / 105 (thread    3) dSTEP    49 / 105 (thread    5) fSTEP    70 / 105 (thread    6) fSTEP    64 / 105 (thread    7) dSTEP    56 / 105 (thread    2) fSTEP    72 / 105 (thread    6) dSTEP    60 / 105 (thread    4) fSTEP    74 / 105 (thread    2) dSTEP    76 / 105 (thread    4) fSTEP    77 / 105 (thread    4) fSTEP    78 / 105 (thread    7) fSTEP    66 / 105 (thread    0) dSTEP    80 / 105 (thread    7) fSTEP    82 / 105 (thread    0) d
Reallocating..done. *alloclen = 6485
STEP    68 / 105 (thread    3) dSTEP    69 / 105 (thread    1) d hSTEP    71 / 105 (thread    5) d hSTEP    73 / 105 (thread    6) d hSTEP    75 / 105 (thread    2) d hSTEP    88 / 105 (thread    2) dSTEP    79 / 105 (thread    4) d hSTEP    89 / 105 (thread    2) dSTEP    81 / 105 (thread    7) d hSTEP    83 / 105 (thread    0) d hSTEP    92 / 105 (thread    7) fSTEP    84 / 105 (thread    3) d hSTEP    85 / 105 (thread    1) d hSTEP    86 / 105 (thread    5) d hSTEP    87 / 105 (thread    6) d hSTEP    90 / 105 (thread    2) d hSTEP    91 / 105 (thread    4) d hSTEP    93 / 105 (thread    7) d hSTEP    94 / 105 (thread    0) d hSTEP    95 / 105 (thread    3) d hSTEP    96 / 105 (thread    1) d hSTEP    97 / 105 (thread    5) d hSTEP    98 / 105 (thread    6) d hSTEP    99 / 105 (thread    2) d hSTEP   100 / 105 (thread    4) d hSTEP   101 / 105 (thread    7) d hSTEP   102 / 105 (thread    0) d hSTEP   103 / 105 (thread    3) d hSTEP   104 / 105 (thread    1) d hSTEP   105 / 105 (thread    5) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..

There are 11 ambiguous characters.
    1 / 110 (thread    0)  101 / 110 (thread    6)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 110   10 / 110   20 / 110   30 / 110   40 / 110   50 / 110   60 / 110   70 / 110   80 / 110   90 / 110  100 / 110
done.

Progressive alignment 1/2... 
STEP     1 / 109 (thread    0) fSTEP     2 / 109 (thread    3) fSTEP     4 / 109 (thread    2) fSTEP     5 / 109 (thread    4) fSTEP     6 / 109 (thread    5) fSTEP     7 / 109 (thread    6) fSTEP     8 / 109 (thread    7) fSTEP     9 / 109 (thread    3) fSTEP     3 / 109 (thread    1) fSTEP    11 / 109 (thread    6) fSTEP    12 / 109 (thread    6) fSTEP    13 / 109 (thread    0) fSTEP    14 / 109 (thread    7) fSTEP    15 / 109 (thread    2) fSTEP    16 / 109 (thread    6) fSTEP    17 / 109 (thread    0) fSTEP    18 / 109 (thread    7) fSTEP    19 / 109 (thread    5) fSTEP    10 / 109 (thread    4)STEP    21 / 109 (thread    0)STEP    20 / 109 (thread    3) f f fSTEP    22 / 109 (thread    2) fSTEP    24 / 109 (thread    1) fSTEP    25 / 109 (thread    2) fSTEP    26 / 109 (thread    5) fSTEP    23 / 109 (thread    7) fSTEP    27 / 109 (thread    3) fSTEP    28 / 109 (thread    3) fSTEP    30 / 109 (thread    0) fSTEP    31 / 109 (thread    5) fSTEP    32 / 109 (thread    2) fSTEP    34 / 109 (thread    7) fSTEP    29 / 109 (thread    1) fSTEP    36 / 109 (thread    6) fSTEP    37 / 109 (thread    4) fSTEP    39 / 109 (thread    7) fSTEP    33 / 109 (thread    0) fSTEP    38 / 109 (thread    5) fSTEP    43 / 109 (thread    7) fSTEP    40 / 109 (thread    1) fSTEP    44 / 109 (thread    2) fSTEP    35 / 109 (thread    3) fSTEP    41 / 109 (thread    6) dSTEP    46 / 109 (thread    4) fSTEP    47 / 109 (thread    7) fSTEP    49 / 109 (thread    6) fSTEP    42 / 109 (thread    0) dSTEP    51 / 109 (thread    1) fSTEP    48 / 109 (thread    2) fSTEP    53 / 109 (thread    7) fSTEP    55 / 109 (thread    3) fSTEP    57 / 109 (thread    7) fSTEP    56 / 109 (thread    3) fSTEP    58 / 109 (thread    7) fSTEP    45 / 109 (thread    5) dSTEP    60 / 109 (thread    3) fSTEP    50 / 109 (thread    6) dSTEP    64 / 109 (thread    3) fSTEP    65 / 109 (thread    3) fSTEP    67 / 109 (thread    6) fSTEP    52 / 109 (thread    4) dSTEP    69 / 109 (thread    4) fSTEP    54 / 109 (thread    1) d hSTEP    71 / 109 (thread    1) fSTEP    59 / 109 (thread    2) d hSTEP    72 / 109 (thread    1) dSTEP    73 / 109 (thread    1) fSTEP    61 / 109 (thread    0) d hSTEP    75 / 109 (thread    1) fSTEP    76 / 109 (thread    1) fSTEP    78 / 109 (thread    0) dSTEP    62 / 109 (thread    7) d hSTEP    80 / 109 (thread    7) fSTEP    63 / 109 (thread    5) d hSTEP    81 / 109 (thread    7) dSTEP    83 / 109 (thread    5) fSTEP    66 / 109 (thread    3) d h
Reallocating..done. *alloclen = 4416
STEP    68 / 109 (thread    6) d hSTEP    70 / 109 (thread    4) d hSTEP    74 / 109 (thread    2) d hSTEP    88 / 109 (thread    2) fSTEP    77 / 109 (thread    1) d hSTEP    89 / 109 (thread    2) dSTEP    91 / 109 (thread    1) dSTEP    79 / 109 (thread    0) d hSTEP    82 / 109 (thread    7) d hSTEP    84 / 109 (thread    5) d hSTEP    85 / 109 (thread    3) d hSTEP    96 / 109 (thread    3) fSTEP    86 / 109 (thread    6) d hSTEP    87 / 109 (thread    4) d hSTEP    90 / 109 (thread    2) d hSTEP   100 / 109 (thread    2) dSTEP    92 / 109 (thread    1) d hSTEP    93 / 109 (thread    0) d hSTEP    94 / 109 (thread    7) d hSTEP    95 / 109 (thread    5) d hSTEP   105 / 109 (thread    5) dSTEP    97 / 109 (thread    3) d hSTEP    98 / 109 (thread    6) d hSTEP    99 / 109 (thread    4) d hSTEP   101 / 109 (thread    2) d hSTEP   102 / 109 (thread    1) d hSTEP   103 / 109 (thread    0) d hSTEP   104 / 109 (thread    7) d hSTEP   106 / 109 (thread    5) d hSTEP   107 / 109 (thread    3) d hSTEP   108 / 109 (thread    6) d hSTEP   109 / 109 (thread    4) d h
done.

Making a distance matrix from msa.. 
    0 / 110 (thread    1)  100 / 110 (thread    5)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 110   10 / 110   20 / 110   30 / 110   40 / 110   50 / 110   60 / 110   70 / 110   80 / 110   90 / 110  100 / 110
done.

Progressive alignment 2/2... 
STEP     1 / 109 (thread    0) fSTEP     2 / 109 (thread    3) fSTEP     4 / 109 (thread    2) fSTEP     3 / 109 (thread    1) fSTEP     5 / 109 (thread    4) fSTEP     7 / 109 (thread    6) fSTEP     8 / 109 (thread    7) fSTEP     9 / 109 (thread    0) fSTEP    10 / 109 (thread    0) fSTEP    11 / 109 (thread    0) fSTEP    13 / 109 (thread    3) fSTEP    14 / 109 (thread    3) fSTEP    15 / 109 (thread    3) fSTEP    16 / 109 (thread    0) fSTEP    17 / 109 (thread    0) fSTEP    18 / 109 (thread    0) fSTEP    19 / 109 (thread    3) fSTEP    20 / 109 (thread    0) fSTEP    21 / 109 (thread    4) fSTEP    22 / 109 (thread    3) fSTEP     6 / 109 (thread    5) fSTEP    23 / 109 (thread    0) fSTEP    24 / 109 (thread    3) fSTEP    25 / 109 (thread    0) fSTEP    27 / 109 (thread    1) fSTEP    26 / 109 (thread    0) fSTEP    28 / 109 (thread    3) fSTEP    29 / 109 (thread    2) fSTEP    12 / 109 (thread    6) fSTEP    30 / 109 (thread    7) fSTEP    31 / 109 (thread    4) fSTEP    32 / 109 (thread    0) fSTEP    35 / 109 (thread    7) fSTEP    33 / 109 (thread    3) fSTEP    38 / 109 (thread    0) fSTEP    39 / 109 (thread    7) fSTEP    40 / 109 (thread    6) fSTEP    37 / 109 (thread    4) fSTEP    34 / 109 (thread    2) dSTEP    42 / 109 (thread    0) fSTEP    44 / 109 (thread    7) fSTEP    36 / 109 (thread    1) dSTEP    45 / 109 (thread    6) fSTEP    49 / 109 (thread    1) fSTEP    43 / 109 (thread    4) dSTEP    50 / 109 (thread    1) fSTEP    51 / 109 (thread    4) fSTEP    46 / 109 (thread    2) dSTEP    52 / 109 (thread    1) fSTEP    53 / 109 (thread    5) fSTEP    41 / 109 (thread    3) fSTEP    54 / 109 (thread    6) fSTEP    55 / 109 (thread    2) fSTEP    57 / 109 (thread    3) fSTEP    47 / 109 (thread    0) dSTEP    59 / 109 (thread    1) fSTEP    56 / 109 (thread    4) fSTEP    48 / 109 (thread    7) dSTEP    62 / 109 (thread    0) fSTEP    64 / 109 (thread    7) fSTEP    61 / 109 (thread    1) dSTEP    66 / 109 (thread    4) fSTEP    58 / 109 (thread    2) fSTEP    68 / 109 (thread    4) dSTEP    69 / 109 (thread    4) dSTEP    70 / 109 (thread    3) fSTEP    63 / 109 (thread    6) dSTEP    71 / 109 (thread    4) fSTEP    73 / 109 (thread    3) fSTEP    60 / 109 (thread    5)STEP    74 / 109 (thread    2) d fSTEP    65 / 109 (thread    0) dSTEP    76 / 109 (thread    6) fSTEP    78 / 109 (thread    6) dSTEP    80 / 109 (thread    6) dSTEP    67 / 109 (thread    1) fSTEP    83 / 109 (thread    0) dSTEP    77 / 109 (thread    2) dSTEP    79 / 109 (thread    4) d hSTEP    81 / 109 (thread    6) d hSTEP    87 / 109 (thread    1) dSTEP    72 / 109 (thread    7) fSTEP    82 / 109 (thread    5) d hSTEP    90 / 109 (thread    7) dSTEP    75 / 109 (thread    3) dSTEP    84 / 109 (thread    0) d
Reallocating..done. *alloclen = 4457
STEP    85 / 109 (thread    2) d hSTEP    86 / 109 (thread    4) d hSTEP    88 / 109 (thread    1) d hSTEP    89 / 109 (thread    6) d hSTEP    98 / 109 (thread    6) fSTEP    91 / 109 (thread    7) d hSTEP    92 / 109 (thread    5) d hSTEP   101 / 109 (thread    5) dSTEP    93 / 109 (thread    3) d hSTEP    94 / 109 (thread    0) d hSTEP   104 / 109 (thread    0) dSTEP    95 / 109 (thread    2) d hSTEP    96 / 109 (thread    4) d hSTEP   107 / 109 (thread    4) dSTEP    97 / 109 (thread    1) d hSTEP    99 / 109 (thread    6) d hSTEP   100 / 109 (thread    7) d hSTEP   102 / 109 (thread    5) d hSTEP   103 / 109 (thread    3) d hSTEP   105 / 109 (thread    0) d hSTEP   106 / 109 (thread    2) d hSTEP   108 / 109 (thread    4) d hSTEP   109 / 109 (thread    1) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


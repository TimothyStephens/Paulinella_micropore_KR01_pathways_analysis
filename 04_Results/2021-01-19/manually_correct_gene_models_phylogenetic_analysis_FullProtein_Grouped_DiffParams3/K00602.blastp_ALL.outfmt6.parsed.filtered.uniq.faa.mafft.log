nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..

There are 1 ambiguous characters.
    1 / 121 (thread    0)  101 / 121 (thread    5)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 121   10 / 121   20 / 121   30 / 121   40 / 121   50 / 121   60 / 121   70 / 121   80 / 121   90 / 121  100 / 121  110 / 121
done.

Progressive alignment 1/2... 
STEP     1 / 120 (thread    1) fSTEP     2 / 120 (thread    2) fSTEP     4 / 120 (thread    0)STEP     5 / 120 (thread    4)STEP     6 / 120 (thread    5) fSTEP     3 / 120 (thread    3) f f fSTEP     7 / 120 (thread    7) fSTEP     8 / 120 (thread    6) fSTEP     9 / 120 (thread    7) fSTEP    10 / 120 (thread    5) fSTEP    12 / 120 (thread    2) fSTEP    13 / 120 (thread    3) fSTEP    14 / 120 (thread    3) fSTEP    16 / 120 (thread    7) fSTEP    17 / 120 (thread    0) fSTEP    11 / 120 (thread    5) fSTEP    18 / 120 (thread    3) fSTEP    15 / 120 (thread    4) fSTEP    19 / 120 (thread    2) fSTEP    20 / 120 (thread    6) fSTEP    21 / 120 (thread    3) fSTEP    22 / 120 (thread    0) fSTEP    23 / 120 (thread    1) fSTEP    24 / 120 (thread    7) fSTEP    26 / 120 (thread    6)STEP    25 / 120 (thread    3) f fSTEP    27 / 120 (thread    5) fSTEP    29 / 120 (thread    4) fSTEP    30 / 120 (thread    0) fSTEP    31 / 120 (thread    1) fSTEP    32 / 120 (thread    6)STEP    33 / 120 (thread    0) f fSTEP    28 / 120 (thread    7) fSTEP    35 / 120 (thread    2) fSTEP    36 / 120 (thread    5) fSTEP    37 / 120 (thread    0) fSTEP    34 / 120 (thread    4) fSTEP    39 / 120 (thread    6) fSTEP    40 / 120 (thread    2) fSTEP    41 / 120 (thread    2) fSTEP    43 / 120 (thread    1) fSTEP    44 / 120 (thread    5) fSTEP    46 / 120 (thread    3) fSTEP    50 / 120 (thread    4) fSTEP    38 / 120 (thread    7) fSTEP    51 / 120 (thread    2) fSTEP    48 / 120 (thread    5) dSTEP    52 / 120 (thread    2) fSTEP    54 / 120 (thread    7) fSTEP    42 / 120 (thread    0) fSTEP    55 / 120 (thread    7) fSTEP    56 / 120 (thread    2) fSTEP    53 / 120 (thread    4) fSTEP    45 / 120 (thread    1) fSTEP    58 / 120 (thread    5) fSTEP    59 / 120 (thread    7) fSTEP    60 / 120 (thread    2) fSTEP    61 / 120 (thread    5) fSTEP    47 / 120 (thread    3) fSTEP    64 / 120 (thread    3) fSTEP    49 / 120 (thread    6) dSTEP    65 / 120 (thread    4) fSTEP    66 / 120 (thread    5) fSTEP    67 / 120 (thread    4) dSTEP    68 / 120 (thread    3) fSTEP    69 / 120 (thread    5) fSTEP    70 / 120 (thread    7) fSTEP    71 / 120 (thread    4) fSTEP    73 / 120 (thread    4) fSTEP    75 / 120 (thread    3) dSTEP    76 / 120 (thread    4) fSTEP    57 / 120 (thread    0) dSTEP    77 / 120 (thread    6) fSTEP    78 / 120 (thread    4) fSTEP    81 / 120 (thread    6)STEP    80 / 120 (thread    4) f fSTEP    82 / 120 (thread    0) dSTEP    62 / 120 (thread    1) dSTEP    83 / 120 (thread    6) dSTEP    85 / 120 (thread    4) f
Reallocating..done. *alloclen = 2328
STEP    84 / 120 (thread    0) dSTEP    88 / 120 (thread    1) fSTEP    63 / 120 (thread    2) dSTEP    89 / 120 (thread    0) fSTEP    87 / 120 (thread    6) dSTEP    90 / 120 (thread    1) dSTEP    72 / 120 (thread    5) dSTEP    93 / 120 (thread    6) dSTEP    91 / 120 (thread    0) d hSTEP    94 / 120 (thread    1) fSTEP    92 / 120 (thread    2) dSTEP    95 / 120 (thread    6) d hSTEP    98 / 120 (thread    2) dSTEP    74 / 120 (thread    7) dSTEP    96 / 120 (thread    1) d hSTEP   102 / 120 (thread    1) fSTEP    99 / 120 (thread    5) d hSTEP    79 / 120 (thread    3) d hSTEP   101 / 120 (thread    6) d hSTEP   103 / 120 (thread    7) d hSTEP   104 / 120 (thread    5) d hSTEP    86 / 120 (thread    4) d hSTEP    97 / 120 (thread    0) d hSTEP   106 / 120 (thread    6) d hSTEP   100 / 120 (thread    2) d hSTEP   107 / 120 (thread    7) d hSTEP   105 / 120 (thread    1) d hSTEP   109 / 120 (thread    4) d hSTEP   108 / 120 (thread    3) d hSTEP   110 / 120 (thread    5) d hSTEP   111 / 120 (thread    0) d hSTEP   112 / 120 (thread    6) d hSTEP   113 / 120 (thread    2) d hSTEP   114 / 120 (thread    7) d hSTEP   115 / 120 (thread    1) d hSTEP   116 / 120 (thread    3) d hSTEP   117 / 120 (thread    4) d hSTEP   118 / 120 (thread    5) d hSTEP   119 / 120 (thread    0) d hSTEP   120 / 120 (thread    6) d h
done.

Making a distance matrix from msa.. 
    0 / 121 (thread    0)  100 / 121 (thread    6)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 121   10 / 121   20 / 121   30 / 121   40 / 121   50 / 121   60 / 121   70 / 121   80 / 121   90 / 121  100 / 121  110 / 121
done.

Progressive alignment 2/2... 
STEP     1 / 120 (thread    0) fSTEP     3 / 120 (thread    1) fSTEP     2 / 120 (thread    2) fSTEP     4 / 120 (thread    4) fSTEP     5 / 120 (thread    5) fSTEP     6 / 120 (thread    6) fSTEP     7 / 120 (thread    3) fSTEP     9 / 120 (thread    5) fSTEP    10 / 120 (thread    5) fSTEP    11 / 120 (thread    5) fSTEP    12 / 120 (thread    3) fSTEP    14 / 120 (thread    3) fSTEP    15 / 120 (thread    3) fSTEP    16 / 120 (thread    0) fSTEP    17 / 120 (thread    3) fSTEP    13 / 120 (thread    5) fSTEP    19 / 120 (thread    3) fSTEP    20 / 120 (thread    0) fSTEP    22 / 120 (thread    4) fSTEP    18 / 120 (thread    1) fSTEP    23 / 120 (thread    6) fSTEP     8 / 120 (thread    7) fSTEP    24 / 120 (thread    0) fSTEP    26 / 120 (thread    2) fSTEP    21 / 120 (thread    5) fSTEP    27 / 120 (thread    0) fSTEP    25 / 120 (thread    4) fSTEP    28 / 120 (thread    3) fSTEP    29 / 120 (thread    6) fSTEP    30 / 120 (thread    2) fSTEP    32 / 120 (thread    3) fSTEP    33 / 120 (thread    5) fSTEP    34 / 120 (thread    1) fSTEP    35 / 120 (thread    5) fSTEP    36 / 120 (thread    3) fSTEP    38 / 120 (thread    4) fSTEP    39 / 120 (thread    2) fSTEP    37 / 120 (thread    5) fSTEP    40 / 120 (thread    6) fSTEP    42 / 120 (thread    1) fSTEP    43 / 120 (thread    4) fSTEP    44 / 120 (thread    5) fSTEP    46 / 120 (thread    1) fSTEP    47 / 120 (thread    5) fSTEP    41 / 120 (thread    3) fSTEP    50 / 120 (thread    5) fSTEP    51 / 120 (thread    4) fSTEP    45 / 120 (thread    2) dSTEP    54 / 120 (thread    3) fSTEP    55 / 120 (thread    3) fSTEP    56 / 120 (thread    3) fSTEP    48 / 120 (thread    6) dSTEP    58 / 120 (thread    7) fSTEP    31 / 120 (thread    0) fSTEP    59 / 120 (thread    3) fSTEP    62 / 120 (thread    0) fSTEP    53 / 120 (thread    4) fSTEP    49 / 120 (thread    1) dSTEP    64 / 120 (thread    0) fSTEP    57 / 120 (thread    2) fSTEP    60 / 120 (thread    7) fSTEP    52 / 120 (thread    5) dSTEP    68 / 120 (thread    1) fSTEP    69 / 120 (thread    1) fSTEP    70 / 120 (thread    1) fSTEP    71 / 120 (thread    1) fSTEP    72 / 120 (thread    7) fSTEP    61 / 120 (thread    3) dSTEP    74 / 120 (thread    5) fSTEP    63 / 120 (thread    6) dSTEP    75 / 120 (thread    1) fSTEP    76 / 120 (thread    1) fSTEP    77 / 120 (thread    3) fSTEP    67 / 120 (thread    2) dSTEP    78 / 120 (thread    1) fSTEP    65 / 120 (thread    0) dSTEP    79 / 120 (thread    6) dSTEP    80 / 120 (thread    5) fSTEP    82 / 120 (thread    1) dSTEP    84 / 120 (thread    5) fSTEP    86 / 120 (thread    5) fSTEP    85 / 120 (thread    1) fSTEP    88 / 120 (thread    5) dSTEP    87 / 120 (thread    2) dSTEP    66 / 120 (thread    4) dSTEP    91 / 120 (thread    5) fSTEP    92 / 120 (thread    5) fSTEP    93 / 120 (thread    5) f
Reallocating..done. *alloclen = 2337
STEP    90 / 120 (thread    0) dSTEP    73 / 120 (thread    7) dSTEP    97 / 120 (thread    7) dSTEP    81 / 120 (thread    3) dSTEP    94 / 120 (thread    5) dSTEP    99 / 120 (thread    7) fSTEP    95 / 120 (thread    2) d hSTEP   101 / 120 (thread    3) dSTEP    83 / 120 (thread    6) d hSTEP   102 / 120 (thread    7) d hSTEP   104 / 120 (thread    3) d hSTEP   106 / 120 (thread    6) fSTEP    89 / 120 (thread    1) d hSTEP   107 / 120 (thread    6) fSTEP   108 / 120 (thread    6) dSTEP   109 / 120 (thread    3) dSTEP    96 / 120 (thread    4) d hSTEP   110 / 120 (thread    6) dSTEP    98 / 120 (thread    0) d hSTEP   111 / 120 (thread    1) dSTEP   100 / 120 (thread    5) d hSTEP   103 / 120 (thread    2) d hSTEP   105 / 120 (thread    7) d hSTEP   112 / 120 (thread    3) d hSTEP   113 / 120 (thread    4) d hSTEP   114 / 120 (thread    6) d hSTEP   115 / 120 (thread    1) d hSTEP   116 / 120 (thread    0) d hSTEP   117 / 120 (thread    5) d hSTEP   118 / 120 (thread    2) d hSTEP   119 / 120 (thread    7) d hSTEP   120 / 120 (thread    3) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


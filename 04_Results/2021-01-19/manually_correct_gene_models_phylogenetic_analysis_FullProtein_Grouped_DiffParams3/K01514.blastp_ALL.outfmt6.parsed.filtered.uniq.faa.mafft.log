nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..

There are 12 ambiguous characters.
    1 / 103 (thread    0)  101 / 103 (thread    1)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 103   10 / 103   20 / 103   30 / 103   40 / 103   50 / 103   60 / 103   70 / 103   80 / 103   90 / 103  100 / 103
done.

Progressive alignment 1/2... 
STEP     2 / 102 (thread    1) fSTEP     1 / 102 (thread    0) fSTEP     4 / 102 (thread    3) fSTEP     6 / 102 (thread    5)STEP     7 / 102 (thread    6) f fSTEP     3 / 102 (thread    2) fSTEP     5 / 102 (thread    4) fSTEP    10 / 102 (thread    3) fSTEP    11 / 102 (thread    1) fSTEP    12 / 102 (thread    3) fSTEP     9 / 102 (thread    0) dSTEP    16 / 102 (thread    1) dSTEP    17 / 102 (thread    4) fSTEP     8 / 102 (thread    7) dSTEP    14 / 102 (thread    6) dSTEP    21 / 102 (thread    7) fSTEP    23 / 102 (thread    7) dSTEP    24 / 102 (thread    7) dSTEP    25 / 102 (thread    7) fSTEP    13 / 102 (thread    2) fSTEP    15 / 102 (thread    5) fSTEP    29 / 102 (thread    5) fSTEP    18 / 102 (thread    4) dSTEP    30 / 102 (thread    5) fSTEP    31 / 102 (thread    5) dSTEP    33 / 102 (thread    4) fSTEP    19 / 102 (thread    0) dSTEP    20 / 102 (thread    1) dSTEP    36 / 102 (thread    1) dSTEP    22 / 102 (thread    6) dSTEP    38 / 102 (thread    6) fSTEP    26 / 102 (thread    7) dSTEP    39 / 102 (thread    6) fSTEP    40 / 102 (thread    6) dSTEP    27 / 102 (thread    3) dSTEP    42 / 102 (thread    7) fSTEP    44 / 102 (thread    3) dSTEP    28 / 102 (thread    2) dSTEP    45 / 102 (thread    3) fSTEP    46 / 102 (thread    3) fSTEP    47 / 102 (thread    3) dSTEP    48 / 102 (thread    3) fSTEP    49 / 102 (thread    3) dSTEP    51 / 102 (thread    2) dSTEP    32 / 102 (thread    5) dSTEP    53 / 102 (thread    5) dSTEP    34 / 102 (thread    4) dSTEP    54 / 102 (thread    5) fSTEP    56 / 102 (thread    4) dSTEP    35 / 102 (thread    0) dSTEP    57 / 102 (thread    4) dSTEP    59 / 102 (thread    0) dSTEP    37 / 102 (thread    1) dSTEP    41 / 102 (thread    6) d hSTEP    43 / 102 (thread    7) d hSTEP    63 / 102 (thread    7) dSTEP    50 / 102 (thread    3) d hSTEP    52 / 102 (thread    2) d hSTEP    66 / 102 (thread    2) dSTEP    55 / 102 (thread    5) d hSTEP    67 / 102 (thread    2) dSTEP    68 / 102 (thread    2) fSTEP    70 / 102 (thread    5) fSTEP    58 / 102 (thread    4) d hSTEP    72 / 102 (thread    4) fSTEP    60 / 102 (thread    0) d hSTEP    73 / 102 (thread    4) fSTEP    74 / 102 (thread    4) dSTEP    76 / 102 (thread    0) fSTEP    61 / 102 (thread    1) d hSTEP    77 / 102 (thread    0) dSTEP    78 / 102 (thread    0) dSTEP    62 / 102 (thread    6) d hSTEP    81 / 102 (thread    6) dSTEP    64 / 102 (thread    7) d hSTEP    82 / 102 (thread    6) fSTEP    83 / 102 (thread    6) dSTEP    65 / 102 (thread    3) d hSTEP    69 / 102 (thread    2) d h
Reallocating..done. *alloclen = 6423
STEP    71 / 102 (thread    5) d hSTEP    75 / 102 (thread    4) d hSTEP    79 / 102 (thread    0) d hSTEP    80 / 102 (thread    1) d hSTEP    84 / 102 (thread    6) d hSTEP    85 / 102 (thread    7) d hSTEP    86 / 102 (thread    3) d hSTEP    87 / 102 (thread    2) d hSTEP    95 / 102 (thread    2) fSTEP    88 / 102 (thread    5) d hSTEP    96 / 102 (thread    2) fSTEP    89 / 102 (thread    4) d hSTEP    90 / 102 (thread    0) d hSTEP   100 / 102 (thread    0) dSTEP    91 / 102 (thread    1) d hSTEP    92 / 102 (thread    6) d hSTEP    93 / 102 (thread    7) d hSTEP    94 / 102 (thread    3) d hSTEP    97 / 102 (thread    2) d hSTEP    98 / 102 (thread    5) d hSTEP    99 / 102 (thread    4) d hSTEP   101 / 102 (thread    0) d hSTEP   102 / 102 (thread    1) d h
done.

Making a distance matrix from msa.. 
    0 / 103 (thread    0)  100 / 103 (thread    3)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 103   10 / 103   20 / 103   30 / 103   40 / 103   50 / 103   60 / 103   70 / 103   80 / 103   90 / 103  100 / 103
done.

Progressive alignment 2/2... 
STEP     1 / 102 (thread    0) fSTEP     2 / 102 (thread    1) fSTEP     3 / 102 (thread    3) fSTEP     4 / 102 (thread    4) fSTEP     6 / 102 (thread    2) fSTEP     5 / 102 (thread    5) fSTEP     7 / 102 (thread    6) fSTEP     9 / 102 (thread    0) fSTEP    10 / 102 (thread    0) dSTEP    11 / 102 (thread    1) fSTEP    13 / 102 (thread    4) dSTEP    14 / 102 (thread    0) fSTEP    12 / 102 (thread    2) dSTEP    15 / 102 (thread    3) fSTEP    16 / 102 (thread    0) fSTEP    17 / 102 (thread    1) dSTEP    18 / 102 (thread    6) fSTEP    19 / 102 (thread    4) fSTEP    20 / 102 (thread    0) dSTEP    21 / 102 (thread    3) dSTEP    22 / 102 (thread    5) fSTEP     8 / 102 (thread    7) dSTEP    23 / 102 (thread    2) fSTEP    27 / 102 (thread    5) fSTEP    25 / 102 (thread    6) dSTEP    30 / 102 (thread    2) fSTEP    31 / 102 (thread    4) fSTEP    26 / 102 (thread    3) dSTEP    33 / 102 (thread    4) dSTEP    34 / 102 (thread    0) fSTEP    24 / 102 (thread    1) dSTEP    35 / 102 (thread    0) fSTEP    36 / 102 (thread    7) dSTEP    37 / 102 (thread    0) fSTEP    39 / 102 (thread    4) fSTEP    40 / 102 (thread    7) dSTEP    41 / 102 (thread    4) fSTEP    43 / 102 (thread    7) dSTEP    44 / 102 (thread    7) dSTEP    47 / 102 (thread    3) dSTEP    28 / 102 (thread    5) dSTEP    48 / 102 (thread    3) dSTEP    49 / 102 (thread    3) fSTEP    51 / 102 (thread    5) dSTEP    29 / 102 (thread    6) dSTEP    32 / 102 (thread    2) dSTEP    53 / 102 (thread    6) fSTEP    54 / 102 (thread    6) dSTEP    56 / 102 (thread    2) dSTEP    38 / 102 (thread    0) dSTEP    57 / 102 (thread    2) fSTEP    59 / 102 (thread    0) dSTEP    42 / 102 (thread    4) dSTEP    60 / 102 (thread    0) fSTEP    62 / 102 (thread    4) fSTEP    45 / 102 (thread    7) dSTEP    63 / 102 (thread    4) fSTEP    65 / 102 (thread    7) dSTEP    46 / 102 (thread    1) dSTEP    66 / 102 (thread    7) fSTEP    68 / 102 (thread    1) fSTEP    50 / 102 (thread    3) dSTEP    70 / 102 (thread    3) fSTEP    52 / 102 (thread    5) dSTEP    71 / 102 (thread    3) dSTEP    73 / 102 (thread    5) dSTEP    55 / 102 (thread    6) dSTEP    74 / 102 (thread    5) dSTEP    58 / 102 (thread    2) d hSTEP    61 / 102 (thread    0) d hSTEP    64 / 102 (thread    4) d hSTEP    79 / 102 (thread    4) dSTEP    67 / 102 (thread    7) d hSTEP    69 / 102 (thread    1) d hSTEP    72 / 102 (thread    3) d hSTEP    75 / 102 (thread    5) d hSTEP    84 / 102 (thread    5) dSTEP    76 / 102 (thread    6) d hSTEP    77 / 102 (thread    2) d hSTEP    87 / 102 (thread    2) dSTEP    78 / 102 (thread    0) d hSTEP    80 / 102 (thread    4) d hSTEP    81 / 102 (thread    7) d hSTEP    82 / 102 (thread    1) d hSTEP    83 / 102 (thread    3) d hSTEP    85 / 102 (thread    5) d hSTEP    86 / 102 (thread    6) d hSTEP    88 / 102 (thread    2) d hSTEP    95 / 102 (thread    6) dSTEP    89 / 102 (thread    0) d hSTEP    90 / 102 (thread    4) d hSTEP    91 / 102 (thread    7) d hSTEP    92 / 102 (thread    1) d hSTEP    93 / 102 (thread    3) d hSTEP    94 / 102 (thread    5) d hSTEP    96 / 102 (thread    6) d hSTEP    97 / 102 (thread    2) d hSTEP    98 / 102 (thread    0) d hSTEP    99 / 102 (thread    4) d h
Reallocating..done. *alloclen = 5973
STEP   100 / 102 (thread    7) d hSTEP   101 / 102 (thread    1) d hSTEP   102 / 102 (thread    3) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


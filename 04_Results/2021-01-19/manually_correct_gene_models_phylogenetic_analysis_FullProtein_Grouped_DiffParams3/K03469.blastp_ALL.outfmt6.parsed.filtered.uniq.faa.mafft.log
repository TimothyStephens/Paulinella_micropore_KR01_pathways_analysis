nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..
    1 / 95 (thread    0)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 95   10 / 95   20 / 95   30 / 95   40 / 95   50 / 95   60 / 95   70 / 95   80 / 95   90 / 95
done.

Progressive alignment 1/2... 
STEP     1 / 94 (thread    0) fSTEP     2 / 94 (thread    2) fSTEP     4 / 94 (thread    3) fSTEP     6 / 94 (thread    5) fSTEP     8 / 94 (thread    7) fSTEP     3 / 94 (thread    1) fSTEP    13 / 94 (thread    3) fSTEP     5 / 94 (thread    4) fSTEP    14 / 94 (thread    3) fSTEP    15 / 94 (thread    1) fSTEP     7 / 94 (thread    6) fSTEP    16 / 94 (thread    3) fSTEP    18 / 94 (thread    3) fSTEP    17 / 94 (thread    1) fSTEP    20 / 94 (thread    3) fSTEP    19 / 94 (thread    4) fSTEP    23 / 94 (thread    6) fSTEP     9 / 94 (thread    5) fSTEP    24 / 94 (thread    4) fSTEP    21 / 94 (thread    1) fSTEP    22 / 94 (thread    3) fSTEP    26 / 94 (thread    4) fSTEP    10 / 94 (thread    0) fSTEP    27 / 94 (thread    5) fSTEP    29 / 94 (thread    3) fSTEP    25 / 94 (thread    1) dSTEP    31 / 94 (thread    3) fSTEP    32 / 94 (thread    3) fSTEP    28 / 94 (thread    4) dSTEP    11 / 94 (thread    2) fSTEP    30 / 94 (thread    6) dSTEP    33 / 94 (thread    5) dSTEP    12 / 94 (thread    7) fSTEP    37 / 94 (thread    1) dSTEP    39 / 94 (thread    6) dSTEP    40 / 94 (thread    1) fSTEP    38 / 94 (thread    2) dSTEP    43 / 94 (thread    7) fSTEP    34 / 94 (thread    3) dSTEP    44 / 94 (thread    6) fSTEP    42 / 94 (thread    5) dSTEP    35 / 94 (thread    0) dSTEP    46 / 94 (thread    6) fSTEP    47 / 94 (thread    6) dSTEP    45 / 94 (thread    3) dSTEP    48 / 94 (thread    2) dSTEP    51 / 94 (thread    7) fSTEP    36 / 94 (thread    4) dSTEP    50 / 94 (thread    3) dSTEP    54 / 94 (thread    2) fSTEP    55 / 94 (thread    7) fSTEP    41 / 94 (thread    1) dSTEP    53 / 94 (thread    6) dSTEP    58 / 94 (thread    7) dSTEP    57 / 94 (thread    3) dSTEP    49 / 94 (thread    5) d hSTEP    60 / 94 (thread    7) dSTEP    62 / 94 (thread    7) fSTEP    52 / 94 (thread    0) d hSTEP    56 / 94 (thread    4) dSTEP    66 / 94 (thread    7) dSTEP    59 / 94 (thread    1) dSTEP    68 / 94 (thread    7) dSTEP    69 / 94 (thread    0) dSTEP    70 / 94 (thread    7) fSTEP    64 / 94 (thread    6) d hSTEP    71 / 94 (thread    7) fSTEP    72 / 94 (thread    7) dSTEP    73 / 94 (thread    1) fSTEP    61 / 94 (thread    2) dSTEP    67 / 94 (thread    4) d hSTEP    63 / 94 (thread    5) dSTEP    77 / 94 (thread    4) d hSTEP    74 / 94 (thread    6) dSTEP    79 / 94 (thread    0) dSTEP    65 / 94 (thread    3) dSTEP    75 / 94 (thread    7) dSTEP    85 / 94 (thread    7) dSTEP    76 / 94 (thread    2) d hSTEP    78 / 94 (thread    1) d h
Reallocating..done. *alloclen = 3021
STEP    80 / 94 (thread    5) d hSTEP    88 / 94 (thread    1) fSTEP    81 / 94 (thread    0) d hSTEP    82 / 94 (thread    6) d hSTEP    83 / 94 (thread    4) d hSTEP    84 / 94 (thread    3) d hSTEP    86 / 94 (thread    7) d hSTEP    87 / 94 (thread    2) d hSTEP    89 / 94 (thread    1) d hSTEP    90 / 94 (thread    5) d hSTEP    91 / 94 (thread    0) d hSTEP    92 / 94 (thread    6) d hSTEP    93 / 94 (thread    4) d hSTEP    94 / 94 (thread    3) d h
done.

Making a distance matrix from msa.. 
    0 / 95 (thread    0)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 95   10 / 95   20 / 95   30 / 95   40 / 95   50 / 95   60 / 95   70 / 95   80 / 95   90 / 95
done.

Progressive alignment 2/2... 
STEP     1 / 94 (thread    0) fSTEP     4 / 94 (thread    3)STEP     2 / 94 (thread    2)STEP     6 / 94 (thread    6) f f fSTEP     5 / 94 (thread    4) fSTEP     7 / 94 (thread    5) fSTEP     3 / 94 (thread    1) fSTEP    13 / 94 (thread    4) fSTEP    14 / 94 (thread    4) fSTEP    15 / 94 (thread    4) fSTEP    16 / 94 (thread    4) fSTEP    17 / 94 (thread    4) fSTEP    18 / 94 (thread    4) fSTEP    19 / 94 (thread    4) fSTEP    20 / 94 (thread    4) fSTEP    21 / 94 (thread    4) fSTEP    22 / 94 (thread    4) fSTEP    23 / 94 (thread    4) fSTEP    24 / 94 (thread    4) fSTEP    25 / 94 (thread    4) fSTEP    26 / 94 (thread    5) fSTEP    27 / 94 (thread    4) fSTEP     8 / 94 (thread    7) fSTEP    30 / 94 (thread    5) fSTEP    29 / 94 (thread    1) dSTEP    32 / 94 (thread    5) fSTEP    33 / 94 (thread    5) dSTEP    34 / 94 (thread    5) fSTEP    35 / 94 (thread    5) dSTEP    36 / 94 (thread    5) fSTEP    38 / 94 (thread    7) dSTEP     9 / 94 (thread    3) fSTEP    39 / 94 (thread    7) dSTEP    40 / 94 (thread    3) fSTEP    10 / 94 (thread    6) fSTEP    41 / 94 (thread    7) fSTEP    42 / 94 (thread    3) dSTEP    43 / 94 (thread    6) dSTEP    11 / 94 (thread    2) fSTEP    44 / 94 (thread    7) dSTEP    47 / 94 (thread    7) fSTEP    46 / 94 (thread    6) dSTEP    12 / 94 (thread    0) fSTEP    49 / 94 (thread    7) dSTEP    50 / 94 (thread    6) dSTEP    28 / 94 (thread    4) dSTEP    51 / 94 (thread    0) fSTEP    53 / 94 (thread    0) dSTEP    54 / 94 (thread    4) fSTEP    31 / 94 (thread    1) dSTEP    55 / 94 (thread    7) dSTEP    56 / 94 (thread    4) dSTEP    57 / 94 (thread    0) dSTEP    37 / 94 (thread    5) dSTEP    58 / 94 (thread    7) dSTEP    62 / 94 (thread    7) dSTEP    60 / 94 (thread    1) dSTEP    45 / 94 (thread    3) dSTEP    64 / 94 (thread    5) fSTEP    61 / 94 (thread    4) dSTEP    66 / 94 (thread    3) dSTEP    48 / 94 (thread    2) d hSTEP    63 / 94 (thread    7) dSTEP    70 / 94 (thread    7) fSTEP    65 / 94 (thread    1) dSTEP    71 / 94 (thread    7) dSTEP    52 / 94 (thread    6)STEP    72 / 94 (thread    2) d d hSTEP    73 / 94 (thread    6) fSTEP    59 / 94 (thread    0) d hSTEP    74 / 94 (thread    1) dSTEP    68 / 94 (thread    3) dSTEP    76 / 94 (thread    0) fSTEP    67 / 94 (thread    5) d hSTEP    78 / 94 (thread    7) fSTEP    77 / 94 (thread    2) dSTEP    79 / 94 (thread    1) dSTEP    81 / 94 (thread    2) dSTEP    75 / 94 (thread    6) dSTEP    82 / 94 (thread    3) dSTEP    69 / 94 (thread    4) d hSTEP    85 / 94 (thread    5) dSTEP    80 / 94 (thread    7) d hSTEP    86 / 94 (thread    4) d
Reallocating..done. *alloclen = 2826
STEP    83 / 94 (thread    2) d hSTEP    84 / 94 (thread    0) d hSTEP    87 / 94 (thread    1) d hSTEP    88 / 94 (thread    3) d hSTEP    89 / 94 (thread    6) d hSTEP    90 / 94 (thread    5) d hSTEP    91 / 94 (thread    4) d hSTEP    92 / 94 (thread    7) d hSTEP    93 / 94 (thread    2) d hSTEP    94 / 94 (thread    0) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


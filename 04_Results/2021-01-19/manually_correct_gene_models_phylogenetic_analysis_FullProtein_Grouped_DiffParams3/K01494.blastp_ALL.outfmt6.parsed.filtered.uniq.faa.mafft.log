nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..
    1 / 62 (thread    0)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 62   10 / 62   20 / 62   30 / 62   40 / 62   50 / 62   60 / 62
done.

Progressive alignment 1/2... 
STEP     1 / 61 (thread    1) fSTEP     2 / 61 (thread    3)STEP     5 / 61 (thread    4) f fSTEP     8 / 61 (thread    7) fSTEP     6 / 61 (thread    5) fSTEP    10 / 61 (thread    7) fSTEP     3 / 61 (thread    2) fSTEP    13 / 61 (thread    7) fSTEP    14 / 61 (thread    7) fSTEP    15 / 61 (thread    5) fSTEP     9 / 61 (thread    4) fSTEP    16 / 61 (thread    7) fSTEP    17 / 61 (thread    5) fSTEP    18 / 61 (thread    7) fSTEP    19 / 61 (thread    2) fSTEP     4 / 61 (thread    0) fSTEP    20 / 61 (thread    7) fSTEP    21 / 61 (thread    4) fSTEP    11 / 61 (thread    1) fSTEP    24 / 61 (thread    7) fSTEP    22 / 61 (thread    5) fSTEP    25 / 61 (thread    2) fSTEP    26 / 61 (thread    2) fSTEP    27 / 61 (thread    7) fSTEP    28 / 61 (thread    1) fSTEP    23 / 61 (thread    4) fSTEP    29 / 61 (thread    5) fSTEP    30 / 61 (thread    2) fSTEP    31 / 61 (thread    5) fSTEP     7 / 61 (thread    6) fSTEP    33 / 61 (thread    0) fSTEP    32 / 61 (thread    1) fSTEP    34 / 61 (thread    2) dSTEP    12 / 61 (thread    3) fSTEP    40 / 61 (thread    1) fSTEP    35 / 61 (thread    4) fSTEP    36 / 61 (thread    5) fSTEP    43 / 61 (thread    1) fSTEP    37 / 61 (thread    7) dSTEP    38 / 61 (thread    6) fSTEP    41 / 61 (thread    0) dSTEP    47 / 61 (thread    7) fSTEP    46 / 61 (thread    6) fSTEP    39 / 61 (thread    3) fSTEP    49 / 61 (thread    3) fSTEP    48 / 61 (thread    1) dSTEP    50 / 61 (thread    6) dSTEP    42 / 61 (thread    4) dSTEP    51 / 61 (thread    7) dSTEP    53 / 61 (thread    1) d hSTEP    44 / 61 (thread    2) dSTEP    55 / 61 (thread    6) d hSTEP    57 / 61 (thread    4) d hSTEP    45 / 61 (thread    5) dSTEP    52 / 61 (thread    3) dSTEP    54 / 61 (thread    0) dSTEP    56 / 61 (thread    7) d
Reallocating..done. *alloclen = 1633
STEP    58 / 61 (thread    1) d hSTEP    59 / 61 (thread    6) d hSTEP    60 / 61 (thread    2) d hSTEP    61 / 61 (thread    4) d h
done.

Making a distance matrix from msa.. 
    0 / 62 (thread    0)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 62   10 / 62   20 / 62   30 / 62   40 / 62   50 / 62   60 / 62
done.

Progressive alignment 2/2... 
STEP     1 / 61 (thread    0) fSTEP     2 / 61 (thread    1) fSTEP     5 / 61 (thread    5) fSTEP     6 / 61 (thread    4) fSTEP     7 / 61 (thread    6) fSTEP    11 / 61 (thread    1) fSTEP     3 / 61 (thread    2) fSTEP    14 / 61 (thread    6) fSTEP     8 / 61 (thread    7) fSTEP     4 / 61 (thread    3) fSTEP    17 / 61 (thread    7) fSTEP    10 / 61 (thread    0) fSTEP    12 / 61 (thread    1) fSTEP    20 / 61 (thread    1) fSTEP    21 / 61 (thread    1) fSTEP    22 / 61 (thread    1) fSTEP     9 / 61 (thread    4) fSTEP    25 / 61 (thread    4) fSTEP    13 / 61 (thread    5) fSTEP    26 / 61 (thread    4) fSTEP    15 / 61 (thread    6) fSTEP    27 / 61 (thread    5) fSTEP    28 / 61 (thread    4) fSTEP    16 / 61 (thread    2) fSTEP    30 / 61 (thread    4) fSTEP    18 / 61 (thread    7) fSTEP    31 / 61 (thread    2) fSTEP    33 / 61 (thread    5) fSTEP    19 / 61 (thread    0) fSTEP    35 / 61 (thread    5) fSTEP    36 / 61 (thread    2) fSTEP    23 / 61 (thread    1) fSTEP    37 / 61 (thread    0) fSTEP    38 / 61 (thread    5) fSTEP    39 / 61 (thread    2) fSTEP    24 / 61 (thread    3) fSTEP    42 / 61 (thread    5) fSTEP    40 / 61 (thread    1) fSTEP    29 / 61 (thread    6) fSTEP    32 / 61 (thread    4) fSTEP    46 / 61 (thread    6) fSTEP    47 / 61 (thread    4) fSTEP    34 / 61 (thread    7) fSTEP    41 / 61 (thread    0) dSTEP    48 / 61 (thread    6) dSTEP    50 / 61 (thread    7) dSTEP    43 / 61 (thread    2) dSTEP    51 / 61 (thread    4) dSTEP    52 / 61 (thread    0) dSTEP    44 / 61 (thread    3) dSTEP    53 / 61 (thread    6) dSTEP    55 / 61 (thread    4) dSTEP    45 / 61 (thread    5) dSTEP    57 / 61 (thread    0) d hSTEP    59 / 61 (thread    3) d hSTEP    49 / 61 (thread    1) dSTEP    54 / 61 (thread    7) dSTEP    56 / 61 (thread    2) d
Reallocating..done. *alloclen = 1617
STEP    58 / 61 (thread    6) dSTEP    60 / 61 (thread    4) d hSTEP    61 / 61 (thread    0) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.


nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, +0.00



Making a distance matrix ..
    1 / 107 (thread    0)  101 / 107 (thread    3)
done.

Constructing a UPGMA tree (efffree=0) ... 
    0 / 107   10 / 107   20 / 107   30 / 107   40 / 107   50 / 107   60 / 107   70 / 107   80 / 107   90 / 107  100 / 107
done.

Progressive alignment 1/2... 
STEP     1 / 106 (thread    1) fSTEP     2 / 106 (thread    0) fSTEP     3 / 106 (thread    2)STEP     6 / 106 (thread    4) f fSTEP     4 / 106 (thread    3) fSTEP     5 / 106 (thread    5) fSTEP     7 / 106 (thread    6) fSTEP     8 / 106 (thread    7) fSTEP    10 / 106 (thread    7) fSTEP    11 / 106 (thread    6) fSTEP     9 / 106 (thread    4) fSTEP    12 / 106 (thread    2) fSTEP    14 / 106 (thread    3) fSTEP    16 / 106 (thread    0) fSTEP    17 / 106 (thread    6) fSTEP    13 / 106 (thread    1) fSTEP    18 / 106 (thread    7) fSTEP    19 / 106 (thread    0) fSTEP    21 / 106 (thread    7) fSTEP    22 / 106 (thread    4) fSTEP    23 / 106 (thread    3) fSTEP    24 / 106 (thread    6) fSTEP    20 / 106 (thread    2) fSTEP    26 / 106 (thread    6) fSTEP    27 / 106 (thread    0) fSTEP    28 / 106 (thread    1) fSTEP    15 / 106 (thread    5) fSTEP    25 / 106 (thread    4) fSTEP    31 / 106 (thread    2) fSTEP    32 / 106 (thread    0) fSTEP    33 / 106 (thread    1) fSTEP    34 / 106 (thread    3) fSTEP    35 / 106 (thread    2) fSTEP    30 / 106 (thread    7) fSTEP    37 / 106 (thread    5) fSTEP    38 / 106 (thread    0) dSTEP    29 / 106 (thread    6) fSTEP    40 / 106 (thread    1) fSTEP    36 / 106 (thread    3) dSTEP    41 / 106 (thread    0) dSTEP    39 / 106 (thread    4) dSTEP    44 / 106 (thread    5) fSTEP    42 / 106 (thread    3) dSTEP    47 / 106 (thread    6) fSTEP    45 / 106 (thread    7) dSTEP    43 / 106 (thread    1) dSTEP    50 / 106 (thread    5) fSTEP    51 / 106 (thread    3)STEP    52 / 106 (thread    6) d dSTEP    49 / 106 (thread    4) dSTEP    55 / 106 (thread    7) fSTEP    46 / 106 (thread    2) dSTEP    56 / 106 (thread    6) fSTEP    59 / 106 (thread    7) dSTEP    54 / 106 (thread    5) dSTEP    60 / 106 (thread    4) dSTEP    48 / 106 (thread    0) dSTEP    61 / 106 (thread    2) dSTEP    63 / 106 (thread    5) fSTEP    57 / 106 (thread    3) dSTEP    64 / 106 (thread    2) fSTEP    66 / 106 (thread    0) dSTEP    53 / 106 (thread    1) dSTEP    58 / 106 (thread    6) dSTEP    68 / 106 (thread    4) fSTEP    71 / 106 (thread    2) dSTEP    73 / 106 (thread    2) fSTEP    62 / 106 (thread    7) d hSTEP    75 / 106 (thread    2) dSTEP    76 / 106 (thread    2) fSTEP    65 / 106 (thread    5) d hSTEP    78 / 106 (thread    2) fSTEP    79 / 106 (thread    2) d hSTEP    81 / 106 (thread    5) d hSTEP    67 / 106 (thread    3) d hSTEP    82 / 106 (thread    5) dSTEP    69 / 106 (thread    0) d hSTEP    70 / 106 (thread    4) d hSTEP    86 / 106 (thread    4) d hSTEP    72 / 106 (thread    6) d hSTEP    88 / 106 (thread    6) d hSTEP    74 / 106 (thread    1) d hSTEP    90 / 106 (thread    1) d hSTEP    77 / 106 (thread    7) d hSTEP    80 / 106 (thread    2) d hSTEP    83 / 106 (thread    3) d hSTEP    84 / 106 (thread    5) d hSTEP    85 / 106 (thread    0) d hSTEP    87 / 106 (thread    4) d hSTEP    89 / 106 (thread    6) d hSTEP    91 / 106 (thread    1) d hSTEP    92 / 106 (thread    7) d hSTEP    93 / 106 (thread    2) d hSTEP    94 / 106 (thread    3) d hSTEP   102 / 106 (thread    3) f
Reallocating..done. *alloclen = 2254
STEP    95 / 106 (thread    5) d hSTEP   104 / 106 (thread    5) dSTEP    96 / 106 (thread    0) d hSTEP    97 / 106 (thread    4) d hSTEP    98 / 106 (thread    6) d hSTEP    99 / 106 (thread    1) d hSTEP   100 / 106 (thread    7) d hSTEP   101 / 106 (thread    2) d hSTEP   103 / 106 (thread    3) d hSTEP   105 / 106 (thread    5) d hSTEP   106 / 106 (thread    0) d h
done.

Making a distance matrix from msa.. 
    0 / 107 (thread    0)  100 / 107 (thread    2)
done.

Constructing a UPGMA tree (efffree=1) ... 
    0 / 107   10 / 107   20 / 107   30 / 107   40 / 107   50 / 107   60 / 107   70 / 107   80 / 107   90 / 107  100 / 107
done.

Progressive alignment 2/2... 
STEP     1 / 106 (thread    0) fSTEP     2 / 106 (thread    3)STEP     3 / 106 (thread    5)STEP     6 / 106 (thread    4) fSTEP     5 / 106 (thread    2) f fSTEP     7 / 106 (thread    1) f fSTEP     8 / 106 (thread    7) fSTEP     4 / 106 (thread    6) fSTEP    10 / 106 (thread    7) fSTEP    11 / 106 (thread    7) fSTEP    12 / 106 (thread    7) fSTEP    13 / 106 (thread    7) fSTEP    14 / 106 (thread    7) fSTEP    15 / 106 (thread    7) fSTEP    16 / 106 (thread    7) fSTEP    17 / 106 (thread    7) fSTEP    18 / 106 (thread    4) fSTEP    19 / 106 (thread    5) fSTEP    21 / 106 (thread    7) fSTEP    20 / 106 (thread    3) dSTEP    22 / 106 (thread    0) fSTEP    23 / 106 (thread    2)STEP    24 / 106 (thread    7)STEP     9 / 106 (thread    6) f f fSTEP    27 / 106 (thread    6) fSTEP    29 / 106 (thread    7) fSTEP    26 / 106 (thread    4) dSTEP    30 / 106 (thread    0) fSTEP    28 / 106 (thread    2) fSTEP    31 / 106 (thread    1) fSTEP    33 / 106 (thread    6) fSTEP    34 / 106 (thread    3) fSTEP    25 / 106 (thread    5) dSTEP    35 / 106 (thread    4) fSTEP    32 / 106 (thread    7) dSTEP    37 / 106 (thread    0) fSTEP    38 / 106 (thread    3) fSTEP    39 / 106 (thread    1)STEP    36 / 106 (thread    6) d fSTEP    40 / 106 (thread    7) fSTEP    41 / 106 (thread    4) fSTEP    43 / 106 (thread    2) fSTEP    44 / 106 (thread    0) fSTEP    42 / 106 (thread    3) dSTEP    49 / 106 (thread    6) dSTEP    47 / 106 (thread    5) fSTEP    50 / 106 (thread    0) fSTEP    45 / 106 (thread    4) dSTEP    51 / 106 (thread    2) fSTEP    48 / 106 (thread    7) dSTEP    52 / 106 (thread    3) fSTEP    55 / 106 (thread    2) dSTEP    46 / 106 (thread    1) dSTEP    56 / 106 (thread    4) fSTEP    57 / 106 (thread    5) dSTEP    62 / 106 (thread    5) dSTEP    58 / 106 (thread    6) dSTEP    63 / 106 (thread    1) dSTEP    53 / 106 (thread    0) dSTEP    65 / 106 (thread    5) fSTEP    60 / 106 (thread    4) dSTEP    66 / 106 (thread    1) fSTEP    67 / 106 (thread    5) dSTEP    54 / 106 (thread    3) dSTEP    69 / 106 (thread    1) dSTEP    68 / 106 (thread    0) dSTEP    59 / 106 (thread    7) dSTEP    74 / 106 (thread    7) dSTEP    61 / 106 (thread    2) d hSTEP    75 / 106 (thread    0) dSTEP    70 / 106 (thread    4) d hSTEP    77 / 106 (thread    7) dSTEP    78 / 106 (thread    2) dSTEP    64 / 106 (thread    6) d hSTEP    73 / 106 (thread    3) d hSTEP    71 / 106 (thread    1) d hSTEP    83 / 106 (thread    1) dSTEP    72 / 106 (thread    5) d hSTEP    82 / 106 (thread    2) d hSTEP    86 / 106 (thread    5) dSTEP    76 / 106 (thread    0) d hSTEP    79 / 106 (thread    7) d hSTEP    80 / 106 (thread    6) d hSTEP    81 / 106 (thread    4) d hSTEP    84 / 106 (thread    3) d hSTEP    85 / 106 (thread    1) d hSTEP    87 / 106 (thread    5) d hSTEP    88 / 106 (thread    2) d hSTEP    96 / 106 (thread    2) fSTEP    89 / 106 (thread    0) d hSTEP    98 / 106 (thread    0) fSTEP    90 / 106 (thread    7) d hSTEP    91 / 106 (thread    6) d hSTEP    92 / 106 (thread    4) d hSTEP    93 / 106 (thread    3) d hSTEP    94 / 106 (thread    1) d hSTEP   104 / 106 (thread    1) dSTEP    95 / 106 (thread    5) d h
Reallocating..done. *alloclen = 2253
STEP    97 / 106 (thread    2) d hSTEP    99 / 106 (thread    0) d hSTEP   100 / 106 (thread    7) d hSTEP   101 / 106 (thread    6) d hSTEP   102 / 106 (thread    4) d hSTEP   103 / 106 (thread    3) d hSTEP   105 / 106 (thread    1) d hSTEP   106 / 106 (thread    5) d h
done.

disttbfast (aa) Version 7.453
alg=A, model=BLOSUM62, 1.53, -0.00, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-2 (Fast but rough)
 Progressive method (guide trees were built 2 times.)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

